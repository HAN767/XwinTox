DBGFLAGS = -ggdb
WARNFLAGS = -Wall -Wno-unused-function -Wno-format -Wno-switch -Wno-import
ALLFLAGS = $(DBGFLAGS) $(WARNFLAGS) -Wno-deprecated -pthread
PKGCONF ?= pkg-config
FLTKCONF ?= fltk-config

PKGCONF		= pkg-config
CXX_LDFLAGS = -lstdc++

TOX_CFLAGS = $(shell $(PKGCONF) libtoxcore --cflags)
TOX_LDFLAGS = $(shell $(PKGCONF) libtoxcore --libs)

FLTK_CFLAGS = $(shell $(FLTKCONF) --cflags)
FLTK_LDFLAGS = $(shell $(FLTKCONF) --ldstaticflags)
FLTK_LIB = $(shell $(FLTKCONF) --libs)

TEMPLATE_OBJC = Objective-C
TEMPLATE_OBJC_TOOL = PCPP
TEMPLATE_OBJC_CXXFLAGS = $(ALLFLAGS)
TEMPLATE_OBJC_CFLAGS = $(ALLFLAGS)
TEMPLATE_OBJC_OBJCFLAGS = $(ALLFLAGS)
TEMPLATE_OBJC_INCS = $(PATH_ROOT)/objcrt/hdr $(PATH_ROOT)/objpak/hdr . hdr
TEMPLATE_OBJC_LDFLAGS = ${CXX_LDFLAGS}

TEMPLATE_XwCXX = C/C++ base template
TEMPLATE_XwCXX_TOOL = GCC
TEMPLATE_XwCXX_CXXFLAGS = -std=c++11 -ggdb
TEMPLATE_XwCXX_CFLAGS = $(CFLAGS)  -std=c11 -ggdb

TEMPLATE_XwSTATIC = C/C++ static template
TEMPLATE_XwSTATIC_EXTENDS = XwCXX
TEMPLATE_XwSTATIC_EXTENDS_BY = appending
TEMPLATE_XwSTATIC_CFLAGS = -fPIC -static
TEMPLATE_XwSTATIC_CXXFLAGS = -fPIC -static
TEMPLATE_XwSTATIC_LDFLAGS = -fPIC -static

FLTKHS_INCS = $(PATH_ROOT)/external/fltkhs
FLTKHS_LIBS =  ${libfltkhs_1_TARGET} ${FLTK_LIB}
FLTKHS_LDFLAGS = ${FLTK_LDFLAGS}
